{
  "name": "findcssvariableusage",
  "displayName": "FindCssVariableUsage",
  "description": "",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.86.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onDidSaveDocument",
    "onDidChangeConfiguration"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "findcssvariableusage.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "findcssvariableusage.highlightSimilarVariables",
        "title": "Highlight css variable usage"
      }
    ],
    "configuration": [
      {
        "title": "Color variable settings",
        "properties": {
          "findcssvariableusage.colorSettings.filePath": {
            "type": "string",
            "default": "absolute-path/to/src/file",
            "description": "Absolute path to source file that contains color variables"
          }
        }
      },
      {
        "title": "Font variable settings",
        "properties": {
          "findcssvariableusage.fontSettings.filePath": {
            "type": "string",
            "default": "absolute-path/to/src/file",
            "description": "Absolute path to source file that contains font variables"
          },
          "findcssvariableusage.fontSettings.fontSizeIdentifier": {
            "type": "string",
            "default": "",
            "description": "Set this to a partial of the name of a font size css variable to have font sizes only use similar variables."
          },
          "findcssvariableusage.fontSettings.fontWeightIdentifier": {
            "type": "string",
            "default": "",
            "description": "Set this to a partial of the name of a font weight css variable to have font weights only use similar variables."
          },
          "findcssvariableusage.fontSettings.lineHeightIdentifier": {
            "type": "string",
            "default": "",
            "description": "Set this to a partial of the name of a line height css variable to have line heights only use similar variables."
          },
          "findcssvariableusage.fontSettings.fontFamilyIdentifier": {
            "type": "string",
            "default": "",
            "description": "Set this to the name of the font family css variable to be able to use it"
          }
        }
      },
      {
        "title": "Spacing variable settings",
        "properties": {
          "findcssvariableusage.spacingSettings.FilePath": {
            "type": "string",
            "default": "absolute-path/to/src/file",
            "description": "Absolute path to source file that contains spacing variables"
          },
          "findcssvariableusage.spacingSettings.applyToProperties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "margin",
              "padding",
              "gap"
            ],
            "description": "Set what css properties are looked at for css variables. By default, margin, padding and gap are selected. You do not need to list all variations of margin or padding, just 'padding' will be enough."
          }
        }
      },
      {
        "title": "Other settings",
        "properties": {
          "findcssvariableusage.otherSettings.cssProperties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "padding",
              "margin",
              "font-size",
              "font-weight",
              "font-family",
              "line-height",
              "color",
              "background"
            ],
            "description": "List all css properties this extension will look at across all files. \nThis allows for you to remove properties you dont want to look at. \nSimilar to spacing, padding and margin look at all variants. \n\nBecause of how this extension is built, you can only remove properties from this array, adding will break it."
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.86.0",
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@typescript-eslint/eslint-plugin": "^6.19.1",
    "@typescript-eslint/parser": "^6.19.1",
    "eslint": "^8.56.0",
    "typescript": "^5.3.3",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.9"
  }
}
